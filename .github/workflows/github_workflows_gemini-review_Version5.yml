# Workflow snippet: added GitHub App token generation step and wires the token into the environment
name: Gemini AI Review (High-level, secure auth + GitHub App support)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  id-token: write
  pull-requests: write

env:
  GEMINI_MODEL: "gemini-pro-2.5"
  GEMINI_AUTH_MODE: ${{ secrets.GEMINI_AUTH_MODE || 'secret' }}
  GEMINI_API_ENDPOINT: ${{ secrets.GEMINI_API_ENDPOINT }}

jobs:
  gemini-review:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      # Generate GitHub App installation token if App secrets are present
      - name: Generate GitHub App installation token (if configured)
        if: ${{ secrets.GITHUB_APP_PRIVATE_KEY != '' && secrets.GITHUB_APP_ID != '' && secrets.GITHUB_APP_INSTALLATION_ID != '' }}
        env:
          GITHUB_APP_PRIVATE_KEY: ${{ secrets.GITHUB_APP_PRIVATE_KEY }}
          GITHUB_APP_ID: ${{ secrets.GITHUB_APP_ID }}
          GITHUB_APP_INSTALLATION_ID: ${{ secrets.GITHUB_APP_INSTALLATION_ID }}
        run: |
          # create script executable and run it; token is exported to $GITHUB_ENV by the script's stdout here
          node ./scripts/ai-review/get-github-app-token.js > /tmp/.gh_app_token || (echo "failed to obtain app token" >&2; exit 2)
          # write to GITHUB_ENV so later steps can read GITHUB_APP_INSTALLATION_TOKEN
          echo "GITHUB_APP_INSTALLATION_TOKEN=$(cat /tmp/.gh_app_token)" >> $GITHUB_ENV
          rm -f /tmp/.gh_app_token

      - name: Ensure review script is present and executable
        run: |
          if [ ! -f ./scripts/ai-review/gemini-review.js ]; then
            echo "Missing scripts/ai-review/gemini-review.js" >&2
            exit 2
          fi
          chmod +x ./scripts/ai-review/gemini-review.js
          chmod +x ./scripts/ai-review/get-github-app-token.js || true

      - name: Run Gemini Pro 2.5 review (secure)
        id: run_review
        env:
          GEMINI_MODEL: ${{ env.GEMINI_MODEL }}
          GEMINI_AUTH_MODE: ${{ env.GEMINI_AUTH_MODE }}
          GEMINI_API_ENDPOINT: ${{ env.GEMINI_API_ENDPOINT }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GEMINI_ACCESS_TOKEN: ${{ env.GEMINI_ACCESS_TOKEN }}
          GITHUB_APP_INSTALLATION_TOKEN: ${{ env.GITHUB_APP_INSTALLATION_TOKEN || '' }}
          REVIEWERS: "Gemini Pro 2.5 (high-level)"
          STANDARDS: "vault"
          POST_BACK: ${{ secrets.GEMINI_POST_BACK || 'false' }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI_COMMIT_SHA: ${{ github.sha }}
          CI_PR_NUMBER: ${{ github.event.pull_request.number || '' }}
        run: |
          node ./scripts/ai-review/gemini-review.js

      - name: Upload review artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gemini-review-output
          path: ./artifacts/gemini-review-*.json